name: Frontend CI/CD
on:
  push:
    branches:
      - setup
      - main
jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Frontend
        run: pnpm build
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: |
            .next/
            package.json
            pnpm-lock.yaml
          if-no-files-found: error
          include-hidden-files: true
          compression-level: 6
#              

  deploy:
    runs-on: ubuntu-latest
    needs: [test-and-build]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: .
      - name: Install sshpass
        run: sudo apt-get install -y sshpass
      - name: Deploy to Production Server
        run: |
          echo "ðŸš€ Deploying .next build to server..."
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp -o StrictHostKeyChecking=no -r .next package.json pnpm-lock.yaml \
          "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/home/${{ secrets.SERVER_USER }}/AI-Ad-Gen-Frontend"
      - name: Start Application on Server
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
          "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}" << 'EOF'
          set -e # Stop script on error
          cd /home/${{ secrets.SERVER_USER }}/AI-Ad-Gen-Frontend
          pnpm install --frozen-lockfile
          pm2 delete ai-adgen-frontend || true
          pm2 start pnpm --name ai-adgen-frontend -- start --port 5000
          EOF